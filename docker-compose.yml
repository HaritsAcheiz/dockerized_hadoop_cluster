version: '3'

services:
  namenode:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: namenode
    hostname: namenode
    networks:
      hdfs_network:
        ipv4_address: 172.20.0.2
    ports:
      - "9870:9870"  # HDFS Web UI
      - "9000:9000"  # HDFS
      - "8088:8088"  # YARN Resource Manager Web UI
      - "8032:8032"  # YARN Resource Manager
    environment:
      - CLUSTER_NAME=hadoop-cluster
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    command: ["namenode"]

  datanode1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: datanode1
    hostname: datanode1
    networks:
      hdfs_network:
        ipv4_address: 172.20.0.3
    ports:
      - "8042:8042"  # YARN NodeManager Web UI
    environment:
      - SERVICE_PRECONDITION=namenode:9870
    volumes:
      - hadoop_datanode1:/hadoop/dfs/data
    depends_on:
      - namenode
    command: ["datanode"]

  datanode2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: datanode2
    hostname: datanode2
    networks:
      hdfs_network:
        ipv4_address: 172.20.0.4
    ports:
      - "8043:8042"  # YARN NodeManager Web UI (different host port to avoid conflicts)
    environment:
      - SERVICE_PRECONDITION=namenode:9870
    volumes:
      - hadoop_datanode2:/hadoop/dfs/data
    depends_on:
      - namenode
    command: ["datanode"]

volumes:
  hadoop_namenode:
  hadoop_datanode1:
  hadoop_datanode2:

networks:
  hdfs_network:
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16